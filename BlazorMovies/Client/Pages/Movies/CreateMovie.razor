@page "/movie/create"
@inject NavigationManager navigationManager
@inject IMoviesRepository movieRepository
@inject IGenreRepository genreRepository

<h3>Create Movie</h3>

@if (NotSelectedGenres != null)
{
    <MovieForm Movie="Movie" OnValidSubmit="SaveMovie" NotSelectedGenres="NotSelectedGenres" />
}


@code {

    // Fields 
    private List<Genre> NotSelectedGenres;
    private Movie Movie = new Movie();

    // Methods

    /// <summary>
    /// On initialization of the page, call the Genre repository Get Genre methods to 
    /// populate the list of available genres. 
    /// </summary>
    /// <returns>List<Genre></returns>
    protected async override Task OnInitializedAsync()
    {
        NotSelectedGenres = await genreRepository.GetGenres();
    }

    /// <summary>
    /// Create a new movie and naviagte the user to the movie's edit page.
    /// </summary>
    /// <returns>Task</returns>
    private async Task SaveMovie()
    {
        try
        {
            var movieId = await movieRepository.CreateMovie(Movie);
            navigationManager.NavigateTo($"movie/{movieId}/{Movie.Title.Replace(" ", "-")}");
        }
        catch (Exception ex)
        {

        }
    }
}
